{
  "commitMessageConventions": {
    "items": {
      "CONVENTIONAL": {
        "expression": "\\G(?:\\* )?+(?<type>build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test)?+!?(?:\\((?<scope>[^()\\[\\]{}]*)\\)!?: )?(?<title>[^-\\s].*)\\s+(?:(?<issues>[^*].*#\\d+)*\\s{2,})?+(?<description>(?:[^*\\s]+\\s?)+)?\\n?(?:(?<footerIssues>[^*].*#\\d+)*\\s*)?+(?<breakingChange>\\n?BREAKING CHANGE: (?:(?<breakingTitle>.*)\\s{2,})(?<breakingDescription>(?:.+\\s?)+?)?)?+\\s*(?<signed>Signed-off-by: (?<signature>.+))?+(?:.*?\\n?)*|\\G[-]+\\n+(?<prInfo>(?<prSigned>Signed-off-by: (?<prSignature>.+))?+\\n?(?:Co-authored-by: (?<prCoAuthor>.+))?)(?:.*?\\n?)*",
        "bumpExpressions": {
          "patch": "(?m)^(?:\\* )?(fix|perf)(!{0})(\\([a-z ]+\\))?: (?!.*^(BREAKING( |-)CHANGE: )).*",
          "major": "(?m)^(?:\\* )?[a-zA-Z0-9_]+(!: .*|.*^(BREAKING( |-)CHANGE: )).*",
          "minor": "(?m)^(?:\\* )?feat(!{0})(\\([a-z ]+\\))?: (?!.*^(BREAKING( |-)CHANGE: )).*"
        }
      }
    },
    "enabled": [
      "CONVENTIONAL"
    ]
  },
  "services": {
    "GITHUB": {
      "options": {
        "REPOSITORY_NAME": "RE_DimDoors",
        "REPOSITORY_OWNER": "LizzieSpace"
      },
      "type": "GITHUB"
    }
  },
  "releaseTypes": {
    "items": {
      "RELEASE": {
        "description": "Release {{version}}",
        "gitPush": "true",
        "gitTag": "true",
        "gitTagForce": "true",
        "gitTagNames": [
          "{{version}}",
          "latest"
        ],
        "matchBranches": "^main$",
        "matchWorkspaceStatus": "CLEAN",
        "publish": "true"
      },
      "RELEASE_CANDIDATE": {
        "collapseVersions": true,
        "collapsedVersionQualifier": "rc",
        "description": "Release {{version}}",
        "gitPush": "true",
        "gitTag": "true",
        "gitTagNames": [
          "{{version}}"
        ],
        "filterTags": "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)(-(rc)(\\.([0-9]\\d*))?)?$",
        "identifiers": [],
        "matchBranches": "^release/.*$",
        "matchWorkspaceStatus": "CLEAN",
        "publish": "true",
        "publishPreRelease": "true",
        "versionRangeFromBranchName": true
      },
      "ALPHA": {
        "collapseVersions": true,
        "collapsedVersionQualifier": "alpha",
        "description": "Release {{version}}",
        "gitPush": "true",
        "gitTag": "true",
        "filterTags": "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)(-(alpha)(\\.([0-9]\\d*))?)?$",
        "gitTagNames": [
          "{{version}}"
        ],
        "matchBranches": "^feature/.*$",
        "matchWorkspaceStatus": "CLEAN",
        "publish": "true",
        "publishPreRelease": "true",
        "identifiers": [
          {
            "position": "PRE_RELEASE",
            "qualifier": "{{#capture expression=\"feature(?<name>.*)\" group=\"name\"}}{{#sanitize}}{{branch}}{{/sanitize}}{{/capture}}"
          }
        ]
      },
      "BETA": {
        "collapseVersions": true,
        "collapsedVersionQualifier": "beta",
        "description": "Release {{version}}",
        "gitPush": "true",
        "gitTag": "true",
        "gitTagNames": [
          "{{version}}"
        ],
        "filterTags": "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)(-(beta)(\\.([0-9]\\d*))?)?$",
        "identifiers": [],
        "matchBranches": "^dev$",
        "matchWorkspaceStatus": "CLEAN",
        "publish": "true",
        "publishPreRelease": "true"
      },
      "UNKNOWN": {
        "collapseVersions": true,
        "collapsedVersionQualifier": "{{#sanitize}}{{branch}}{{/sanitize}}",
        "matchBranches": "^(?!dev|main|feature/|release/).*$",
        "matchWorkspaceStatus": "CLEAN",
        "identifiers": [
          {
            "position": "BUILD",
            "qualifier": "sha",
            "value": "{{#short7}}{{releaseScope.finalCommit.sha}}{{/short7}}"
          }
        ]
      },
      "RELEASE_CANDIDATE-INTERNAL": {
        "collapseVersions": true,
        "collapsedVersionQualifier": "rc",
        "matchBranches": "^release/.*$",
        "matchWorkspaceStatus": "DIRTY",
        "identifiers": [
          {
            "position": "BUILD",
            "qualifier": "t",
            "value": "{{#cutLeft length=\"7\"}}{{timestamp}}{{/cutLeft}}"
          }
        ]
      },
      "ALPHA-INTERNAL": {
        "collapseVersions": true,
        "collapsedVersionQualifier": "alpha",
        "matchBranches": "^feature/.*$",
        "matchWorkspaceStatus": "DIRTY",
        "identifiers": [
          {
            "position": "PRE_RELEASE",
            "qualifier": "{{#capture expression=\"feature(?<name>.*)\" group=\"name\"}}{{#sanitize}}{{branch}}{{/sanitize}}{{/capture}}"
          },
          {
            "position": "BUILD",
            "qualifier": "t",
            "value": "{{#cutLeft length=\"7\"}}{{timestamp}}{{/cutLeft}}"
          }
        ]
      },
      "BETA-INTERNAL": {
        "collapseVersions": true,
        "collapsedVersionQualifier": "beta",
        "matchBranches": "^dev$",
        "matchWorkspaceStatus": "DIRTY",
        "identifiers": [
          {
            "position": "BUILD",
            "qualifier": "t",
            "value": "{{#cutLeft length=\"7\"}}{{timestamp}}{{/cutLeft}}"
          }
        ]
      },
      "UNKNOWN-INTERNAL": {
        "collapseVersions": true,
        "collapsedVersionQualifier": "{{#sanitize}}{{branch}}{{/sanitize}}",
        "matchBranches": "^(?!dev|main|feature/|release/).*$",
        "matchWorkspaceStatus": "DIRTY",
        "identifiers": [
          {
            "position": "BUILD",
            "qualifier": "t",
            "value": "{{#cutLeft length=\"7\"}}{{timestamp}}{{/cutLeft}}"
          }
        ]
      }
    },
    "remoteRepositories": [
      "origin"
    ],
    "publicationServices": [],
    "enabled": [
      "RELEASE",
      "RELEASE_CANDIDATE",
      "ALPHA",
      "BETA",
      "UNKNOWN",
      "RELEASE_CANDIDATE-INTERNAL",
      "ALPHA-INTERNAL",
      "BETA-INTERNAL",
      "UNKNOWN-INTERNAL"
    ]
  },
  "releaseAssets": {
    "jar": {
      "description": "",
      "type": "application/java-archive"
    }
  },
  "git": {
    "remotes": {
      "origin": {
        "authenticationMethod": "USER_PASSWORD"
      }
    }
  },
  "scheme": "SEMVER",
  "dryRun": false,
  "summary": true,
  "releasePrefix": "v",
  "initialVersion": "0.1.0",
  "releaseLenient": false,
  "summaryFile": ".nyx-summary",
  "verbosity": "INFO",
  "substitutions": {
    "enabled": [],
    "items": {}
  }
}