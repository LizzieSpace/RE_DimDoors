buildscript {
    // this block isn't strictly necessary for the build to run, but intelij IDEA only recognizes the nyx code completion on configs/versioning.gradle if it is present. thanks, Intelij
    repositories { maven { url("https://plugins.gradle.org/m2/") } }
    dependencies {
        classpath 'com.mooltiverse.oss.nyx:main:3.0.7'
    }
}
plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'maven-publish'
}

group = project.maven_group

base {
    archivesName = project.archive_name
}

apply from: "configs/versioning.gradle"
apply from: "configs/loom.gradle"
apply from: "configs/dependencies.gradle"

processResources {
    inputs.property "version", version
    inputs.property "minecraft_version", minecraft_version
    inputs.property "loader_version", loader_version
    inputs.property "dimdoors_version", dimdoors_version
    inputs.property "cloth-config", cloth_config
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": version,
                "minecraft_version": minecraft_version,
                "loader_version": loader_version,
                "dimdoors_version": dimdoors_version,
                "cloth_config": cloth_config
    }
}

final def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
//    final def javaVersion = JavaVersion.toVersion(targetJavaVersion)
//    if (JavaVersion.current() < javaVersion) {
//        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
//    }
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    reproducibleFileOrder = true

    from("LICENSE.md") {
        rename(/(LICENSE)(\.md)/, /$1_${archive_name}$2/)
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = archive_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
